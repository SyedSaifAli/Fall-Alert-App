import PushNotification from 'react-native-push-notification';

export default class NotifService {

  constructor(onNotification) {
    this.configure(onNotification);
  }
  configure(onNotification){
    PushNotification.configure({
      // (optional) Called when Token is generated (iOS and Android)

      // (required) Called when a remote or local notification is opened or received
      onNotification: onNotification, //this._onNotification,

      // IOS ONLY (optional): default: all - Permissions to register.
      permissions: {
        alert: true,
        badge: true,
        sound: true
      },

      // Should the initial notification be popped automatically
      // default: true
      popInitialNotification: true,

      /**
        * (optional) default: true
        * - Specified if permissions (ios) and token (android and ios) will requested or not,
        * - if not, you must call PushNotificationsHandler.requestPermissions() later
        */
      requestPermissions: true,
    });
  }

  localNotif(data) {
    PushNotification.localNotification({
      /* Android Only Properties */
      id: data.idx, // (optional) Valid unique 32 bit integer specified as string. default: Autogenerated Unique ID
      largeIcon: "ic_launcher", // (optional) default: "ic_launcher"
      smallIcon: "ic_notification", // (optional) default: "ic_notification" with fallback for "ic_launcher"
      bigText: "User with contact number " + data.user.cmob + " experienced a fall at " + new Date(data.notif.dc * 1000).toString().split('GMT')[0],
      color: "red", // (optional) default: system default
      vibrate: true, // (optional) default: true
      vibration: 2000,
      tag: 'some_tag', // (optional) add tag to message
      group: "group", // (optional) add group to message
      ongoing: false, // (optional) set whether this is an "ongoing" notification

      /* iOS only properties */
      alertAction: 'view', // (optional) default: view
      category: null, // (optional) default: null
      userInfo: null, // (optional) default: null (object containing additional notification data)

      /* iOS and Android properties */
      title: data.notif.h, // (optional)
      message: "User with contact number " + data.user.cmob + " experienced a fall at " + new Date(data.notif.dc * 1000).toString().split('GMT')[0], // (required)
      playSound: true, // (optional) default: true
      soundName: 'alarm.mp3',
      number: '10', // (optional) Valid 32 bit integer specified as string. default: none (Cannot be zero)
    });
  }

  checkPermission(cbk) {
    return PushNotification.checkPermissions(cbk);
  }

  cancelNotif() {
    PushNotification.cancelLocalNotifications({id: ''+this.lastId});
  }

  cancelAll() {
    PushNotification.cancelAllLocalNotifications();
  }
}